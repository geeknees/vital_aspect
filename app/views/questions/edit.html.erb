<div class="min-h-screen bg-gray-50 py-6">
  <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="bg-white shadow rounded-lg">
      <div class="px-6 py-4 border-b border-gray-200">
        <h1 class="text-2xl font-bold text-gray-900"><%= t('questions.edit') %></h1>
        <p class="mt-1 text-sm text-gray-600"><%= t('questions.edit_description') %></p>
      </div>

      <div class="px-6 py-6">
        <%= form_with(model: [@organization, @evaluation, @question], local: true, class: "space-y-6") do |form| %>
          <% if @question.errors.any? %>
            <div class="bg-red-50 border border-red-200 rounded-md p-4">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-sm font-medium text-red-800"><%= t('questions.errors_prevented_saving') %></h3>
                  <div class="mt-2 text-sm text-red-700">
                    <ul class="list-disc pl-5 space-y-1">
                      <% @question.errors.full_messages.each do |message| %>
                        <li><%= message %></li>
                      <% end %>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          <% end %>

          <div>
            <%= form.label :question_type, class: "block text-sm font-medium text-gray-700" %>
            <%= form.select :question_type,
                options_for_select([
                  [t('questions.type.text'), 'text'],
                  [t('questions.type.rating'), 'rating'],
                  [t('questions.type.multiple_choice'), 'multiple_choice'],
                  [t('questions.type.yes_no'), 'yes_no']
                ], @question.question_type),
                {},
                {
                  class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500",
                  required: true,
                  onchange: "toggleOptionsSection(this.value)"
                } %>
          </div>

          <div>
            <%= form.label :text, class: "block text-sm font-medium text-gray-700" %>
            <%= form.text_area :text,
                rows: 3,
                placeholder: t('questions.text_placeholder'),
                class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500",
                required: true %>
          </div>

          <div id="options-section" class="<%= 'hidden' unless ['multiple_choice', 'rating'].include?(@question.question_type) %>">
            <label class="block text-sm font-medium text-gray-700"><%= t('questions.options') %></label>
            <div class="mt-2">
              <div id="options-container">
                <% (@question.options.presence || ['']).each_with_index do |option, index| %>
                  <div class="flex items-center mb-2 option-row">
                    <input type="text"
                           name="question[options][]"
                           value="<%= option %>"
                           placeholder="<%= t('questions.option_placeholder') %>"
                           class="flex-1 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 <%= 'bg-gray-50' if @question.question_type == 'rating' %>"
                           <%= 'readonly' if @question.question_type == 'rating' %>>
                    <% if @question.question_type == 'rating' %>
                      <span class="ml-2 text-sm text-gray-600"><%= get_rating_label(option.to_i) if option.to_i > 0 %></span>
                    <% else %>
                      <button type="button"
                              onclick="removeOption(this)"
                              class="ml-2 text-red-600 hover:text-red-900">
                        <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                        </svg>
                      </button>
                    <% end %>
                  </div>
                <% end %>
              </div>
              <% unless @question.question_type == 'rating' %>
                <button type="button"
                        onclick="addOption()"
                        class="mt-2 inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                  <%= t('questions.add_option') %>
                </button>
              <% end %>
            </div>
            <p class="mt-1 text-sm text-gray-500"><%= t('questions.options_help') %></p>
          </div>

          <div class="flex items-center">
            <%= form.check_box :is_required,
                class: "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded" %>
            <%= form.label :is_required, t('questions.required'),
                class: "ml-2 block text-sm text-gray-900" %>
          </div>

          <div class="pt-6 border-t border-gray-200">
            <div class="flex justify-between">
              <%= link_to t('common.cancel'), organization_evaluation_path(@organization, @evaluation),
                  class: "inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" %>
              <%= form.submit t('questions.update'),
                  class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  function toggleOptionsSection(questionType) {
    const optionsSection = document.getElementById('options-section');
    if (questionType === 'multiple_choice' || questionType === 'rating') {
      optionsSection.classList.remove('hidden');
      // Rating questions need rating scale options
      if (questionType === 'rating') {
        setRatingOptions();
      }
    } else {
      optionsSection.classList.add('hidden');
    }
  }

  function setRatingOptions() {
    const container = document.getElementById('options-container');
    container.innerHTML = '';
    for (let i = 1; i <= 5; i++) {
      const optionRow = document.createElement('div');
      optionRow.className = 'flex items-center mb-2 option-row';
      optionRow.innerHTML = `
        <input type="text"
               name="question[options][]"
               value="${i}"
               readonly
               class="flex-1 border-gray-300 rounded-md shadow-sm bg-gray-50">
        <span class="ml-2 text-sm text-gray-600">${getRatingLabel(i)}</span>
      `;
      container.appendChild(optionRow);
    }
  }

  function getRatingLabel(rating) {
    const labels = {
      1: '<%= t("questions.rating.very_poor") %>',
      2: '<%= t("questions.rating.poor") %>',
      3: '<%= t("questions.rating.average") %>',
      4: '<%= t("questions.rating.good") %>',
      5: '<%= t("questions.rating.excellent") %>'
    };
    return labels[rating] || '';
  }

  function addOption() {
    const container = document.getElementById('options-container');
    const optionRow = document.createElement('div');
    optionRow.className = 'flex items-center mb-2 option-row';
    optionRow.innerHTML = `
      <input type="text"
             name="question[options][]"
             placeholder="<%= t('questions.option_placeholder') %>"
             class="flex-1 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
      <button type="button"
              onclick="removeOption(this)"
              class="ml-2 text-red-600 hover:text-red-900">
        <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
        </svg>
      </button>
    `;
    container.appendChild(optionRow);
  }

  function removeOption(button) {
    button.parentElement.remove();
  }
</script>
